{"version":3,"file":"static/js/360.250e51d6.chunk.js","mappings":"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","sources":["components/Pagination.jsx","components/Search.jsx","components/SortableHeader.jsx","pages/FeedBack.jsx"],"sourcesContent":["import React from 'react';\nimport { MdOutlineKeyboardDoubleArrowLeft, MdOutlineKeyboardDoubleArrowRight } from \"react-icons/md\";\n\nconst Pagination = ({ pageNumber, setPageNumber, totalItem, parPage, showItem }) => {\n    const totalPage = Math.ceil(totalItem / parPage);\n    \n    // Tính toán startPage và endPage\n    let startPage = Math.max(1, pageNumber - Math.floor(showItem / 2));\n    let endPage = Math.min(totalPage, startPage + showItem - 1);\n    \n    // Điều chỉnh nếu không đủ showItem\n    if (endPage - startPage + 1 < showItem) {\n        startPage = Math.max(1, endPage - showItem + 1);\n    }\n\n    const createBtn = () => {\n        const btns = [];\n        for (let i = startPage; i <= endPage; i++) {\n            if (i < 1 || i > totalPage) continue; // Đảm bảo chỉ tạo nút hợp lệ\n            btns.push(\n                <li \n                    key={i}\n                    onClick={() => setPageNumber(i)} \n                    className={`${pageNumber === i \n                        ? 'bg-blue-500 shadow-lg shadow-blue-300/50 text-white' \n                        : 'bg-white hover:bg-blue-100 shadow-md hover:shadow-blue-200/50 text-blue-500 border border-blue-200'} \n                        w-[33px] h-[33px] rounded-full flex justify-center items-center cursor-pointer`}\n                >\n                    {i}                    \n                </li>\n            ) \n        }\n        return btns;\n    }\n    \n    return (\n        <ul className='flex gap-3'>\n            {\n                pageNumber > 1 && \n                <li \n                    onClick={() => setPageNumber(pageNumber - 1)} \n                    className='w-[33px] h-[33px] rounded-full flex justify-center items-center bg-white text-blue-500 cursor-pointer border border-blue-200 hover:bg-blue-50'\n                >\n                    <MdOutlineKeyboardDoubleArrowLeft />\n                </li>\n            }\n            {\n                createBtn()\n            }\n            {\n                pageNumber < totalPage && \n                <li \n                    onClick={() => setPageNumber(pageNumber + 1)} \n                    className='w-[33px] h-[33px] rounded-full flex justify-center items-center bg-white text-blue-500 cursor-pointer border border-blue-200 hover:bg-blue-50'\n                >\n                    <MdOutlineKeyboardDoubleArrowRight />\n                </li>\n            }\n        </ul>\n    )\n};\n\nexport default Pagination;\n","import React from 'react';\n\nconst Search = ({setParPage, setSearchValue, searchValue}) => {\n    return (\n            <div className='flex items-center gap-2'>\n                <span className=\"text-gray-700 text-xl italic\">Hiện thị</span>\n                <select \n                    onChange={(e) => setParPage(parseInt(e.target.value))} \n                    className='px-4 py-2 bg-white text-black border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent'\n                >\n                    <option value=\"5\">5</option>\n                    <option value=\"10\">10</option>\n                    <option value=\"20\">20</option> \n                </select>\n            </div>\n    );\n}; \n\nexport default Search;\n","import React from 'react';\nimport { FaSort, FaSortUp, FaSortDown } from 'react-icons/fa';\n\nconst SortableHeader = ({ label, field, sortField, sortOrder, onSort, className }) => {\n  const getSortIcon = () => {\n    if (sortField !== field) {\n      return <FaSort className=\"ml-1 inline\" />;\n    }\n    return sortOrder === 'asc' ? <FaSortUp className=\"ml-1 inline\" /> : <FaSortDown className=\"ml-1 inline\" />;\n  };\n\n  return (\n    <th \n      scope='col' \n      className={`py-3 px-4 cursor-pointer ${className}`} \n      onClick={() => onSort(field)}\n    >\n      {label} {getSortIcon()}\n    </th>\n  );\n};\n\nexport default SortableHeader;\n","import React, { useEffect, useState } from \"react\";\nimport Search from \"../components/Search\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport Pagination from \"../components/Pagination\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetch_feedbacks } from \"../store/reducers/feedbackReducer\";\nimport SortableHeader from \"../components/SortableHeader\";\n\nconst Feedback = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [parPage, setParPage] = useState(5);\n  const [sortField, setSortField] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n\n  const { feedbacks, loader, errorMessage } = useSelector(\n    (state) => state.feedback\n  );\n\n  useEffect(() => {\n    dispatch(fetch_feedbacks());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [parPage, searchValue]);\n\n  // Search & sort\n  const getFilteredSortedFeedbacks = () => {\n    let data = Array.isArray(feedbacks) ? [...feedbacks] : [];\n\n    // Search\n    if (searchValue) {\n      data = data.filter(\n        (fb) =>\n          (fb.name &&\n            fb.name.toLowerCase().includes(searchValue.toLowerCase())) ||\n          (fb.content &&\n            fb.content.toLowerCase().includes(searchValue.toLowerCase()))\n      );\n    }\n\n    // Sort nếu có\n    if (sortField) {\n      data.sort((a, b) => {\n        let valueA = a[sortField];\n        let valueB = b[sortField];\n\n        if (sortField === \"createdAt\") {\n          valueA = new Date(valueA);\n          valueB = new Date(valueB);\n        } else if (typeof valueA === \"string\") {\n          valueA = valueA.toLowerCase();\n          valueB = valueB.toLowerCase();\n        }\n\n        if (valueA < valueB) return sortOrder === \"asc\" ? -1 : 1;\n        if (valueA > valueB) return sortOrder === \"asc\" ? 1 : -1;\n        return 0;\n      });\n    }\n\n    return data;\n  };\n\n  const filteredSortedFeedbacks = getFilteredSortedFeedbacks();\n\n  // ĐẢO NGƯỢC: feedback mới nhất lên đầu\n  const reversedFeedbacks = [...filteredSortedFeedbacks].reverse();\n\n  // PHÂN TRANG\n  const startIndex = (currentPage - 1) * parPage;\n  const endIndex = startIndex + parPage;\n  const displayedFeedbacks = reversedFeedbacks.slice(startIndex, endIndex);\n\n  // Điều hướng đến trang chi tiết feedback sử dụng id\n  const handleViewDetail = (feedbackId) => {\n    navigate(`/admin/feedback/${feedbackId}`);\n  };\n\n  const handleSort = (field) => {\n    if (sortField === field) {\n      setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n    } else {\n      setSortField(field);\n      setSortOrder(\"asc\");\n    }\n  };\n\n  return (\n    <div className=\"px-2 lg:px-7 pt-5\">\n      <h1 className=\"text-[#000000] font-semibold text-4xl mb-3\">\n        Danh sách Phản hồi\n      </h1>\n      <Search\n        setParPage={setParPage}\n        setSearchValue={setSearchValue}\n        searchValue={searchValue}\n      />\n      <div className=\"relative overflow-x-auto mt-5\">\n        <table className=\"w-full text-base text-left text-gray-700 bg-white\">\n          <thead className=\"text-sm text-gray-700 uppercase bg-gray-100 border-b\">\n            <tr>\n              <SortableHeader\n                label=\"No\"\n                field=\"id\"\n                sortField={sortField}\n                sortOrder={sortOrder}\n                onSort={handleSort}\n                className=\"w-14\"\n              />\n              <th scope=\"col\" className=\"py-3 px-4 w-16 text-base\">\n                Người gửi\n              </th>\n              <SortableHeader\n                label=\"Nội dung\"\n                field=\"content\"\n                sortField={sortField}\n                sortOrder={sortOrder}\n                onSort={handleSort}\n                className=\"w-1/3 text-base\"\n              />\n              <SortableHeader\n                label=\"Trạng thái\"\n                field=\"is_checked\"\n                sortField={sortField}\n                sortOrder={sortOrder}\n                onSort={handleSort}\n                className=\"w-1/6 text-base\"\n              />\n              <SortableHeader\n                label=\"Ngày gửi\"\n                field=\"createdAt\"\n                sortField={sortField}\n                sortOrder={sortOrder}\n                onSort={handleSort}\n                className=\"w-1/6 text-base\"\n              />\n            </tr>\n          </thead>\n          <tbody>\n            {loader ? (\n              <tr>\n                <td colSpan=\"5\" className=\"py-4 text-center\">\n                  Đang tải...\n                </td>\n              </tr>\n            ) : errorMessage ? (\n              <tr>\n                <td colSpan=\"5\" className=\"py-4 text-center text-red-500\">\n                  {errorMessage}\n                </td>\n              </tr>\n            ) : displayedFeedbacks.length === 0 ? (\n              <tr>\n                <td colSpan=\"5\" className=\"py-4 text-center text-gray-500\">\n                  Không có phản hồi nào\n                </td>\n              </tr>\n            ) : (\n              displayedFeedbacks.map((fb, index) => (\n                <tr\n                  key={fb.id}\n                  className=\"bg-white border-b hover:bg-blue-100 cursor-pointer\"\n                  onClick={() => handleViewDetail(fb.id)}\n                >\n                  <td className=\"py-2 px-4 font-medium text-xl\">\n                    {startIndex + index + 1}\n                  </td>\n                  <td className=\"py-2 px-4 font-medium text-xl\">\n                    {fb.name || \"Khách hàng\"}\n                  </td>\n                  <td className=\"py-2 px-4 font-medium text-xl truncate max-w-xs\">\n                    {fb.content}\n                  </td>\n                  <td className=\"py-2 px-4 font-medium text-xl\">\n                    <span\n                      className={`px-2 py-1 rounded-full text-sm ${\n                        fb.is_checked\n                          ? \"bg-green-100 text-green-800\"\n                          : \"bg-yellow-100 text-yellow-800\"\n                      }`}\n                    >\n                      {fb.is_checked ? \"Đã xem\" : \"Chưa xem\"}\n                    </span>\n                  </td>\n                  <td className=\"py-2 px-4 font-medium text-xl\">\n                    {fb.createdAt\n                      ? new Date(fb.createdAt).toLocaleDateString()\n                      : \"\"}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n      <Outlet />\n      <div className=\"w-full flex justify-end mt-4 bottom-4 right-4\">\n        <Pagination\n          pageNumber={currentPage}\n          setPageNumber={setCurrentPage}\n          totalItem={filteredSortedFeedbacks.length}\n          parPage={parPage}\n          showItem={3}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Feedback;\n"],"names":["_ref","pageNumber","setPageNumber","totalItem","parPage","showItem","totalPage","Math","ceil","startPage","max","floor","endPage","min","_jsxs","className","children","_jsx","onClick","MdOutlineKeyboardDoubleArrowLeft","createBtn","btns","i","push","MdOutlineKeyboardDoubleArrowRight","setParPage","setSearchValue","searchValue","onChange","e","parseInt","target","value","label","field","sortField","sortOrder","onSort","scope","FaSort","FaSortUp","FaSortDown","Feedback","dispatch","useDispatch","navigate","useNavigate","currentPage","setCurrentPage","useState","setSortField","setSortOrder","feedbacks","loader","errorMessage","useSelector","state","feedback","useEffect","fetch_feedbacks","filteredSortedFeedbacks","getFilteredSortedFeedbacks","data","Array","isArray","filter","fb","name","toLowerCase","includes","content","sort","a","b","valueA","valueB","Date","reversedFeedbacks","reverse","startIndex","endIndex","displayedFeedbacks","slice","handleSort","Search","SortableHeader","colSpan","length","map","index","handleViewDetail","feedbackId","id","is_checked","createdAt","toLocaleDateString","Outlet","Pagination"],"sourceRoot":""}
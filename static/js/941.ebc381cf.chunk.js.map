{"version":3,"file":"static/js/941.ebc381cf.chunk.js","mappings":"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","sources":["pages/Dashboard.jsx","utils/utils.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { get_allOrder } from \"../store/reducers/orderReducer\";\nimport { get_allRestaurant } from \"../store/reducers/restaurantReducer\";\nimport { get_allDriver } from \"../store/reducers/driverReducer\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  calculateDailyRevenue,\n  formatCurrency,\n  getMonthlyRevenueArray,\n} from \"../utils/utils\";\n\nimport { fetchVisitorData } from \"../store/reducers/dashboardReducer\";\n\n// Số lượng người truy cập từng ngày trong từng tháng\nconst dailyVisitorsByMonth = {\n  0: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 1\n  1: Array.from({ length: 28 }, () => Math.floor(Math.random() * 101)), // Tháng 2\n  2: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 3\n  3: Array.from({ length: 30 }, () => Math.floor(Math.random() * 101)), // Tháng 4\n  4: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 5\n  5: Array.from({ length: 30 }, () => Math.floor(Math.random() * 101)), // Tháng 6\n  6: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 7\n  7: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 8\n  8: Array.from({ length: 30 }, () => Math.floor(Math.random() * 101)), // Tháng 9\n  9: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 10\n  10: Array.from({ length: 30 }, () => Math.floor(Math.random() * 101)), // Tháng 11\n  11: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 12\n};\n\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [currentPage] = useState(1);\n  const [parPage] = useState(5);\n  const [sortField] = useState(\"\");\n  const [sortOrder] = useState(\"asc\");\n\n  const themeReducer = useSelector((state) => state.ThemeReducer.mode);\n  const { rawVisitorData } = useSelector((state) => state.dashboard);\n\n  const { totalRestaurant = 0 } = useSelector(\n    (state) => state.restaurant || {}\n  );\n  const { totalDrivers = 0 } = useSelector((state) => state.driver || {});\n  const { orders = [], totalOrders = 0 } = useSelector(\n    (state) => state.order || {}\n  );\n  const monthlyRevenueData = getMonthlyRevenueArray(orders);\n\n  \n\n  // Extract data for chart\n  const monthLabels = [\n    \"Tháng 1\", \"Tháng 2\", \"Tháng 3\", \"Tháng 4\", \n    \"Tháng 5\", \"Tháng 6\", \"Tháng 7\", \"Tháng 8\",\n    \"Tháng 9\", \"Tháng 10\", \"Tháng 11\", \"Tháng 12\"\n  ];\n    const revenueValues = new Array(12).fill(0);\n  monthlyRevenueData.forEach((item) => {\n    const monthIndex = new Date(`${item.month} 1, ${item.year}`).getMonth();\n    revenueValues[monthIndex] = item.revenue;\n  });\n\n  // Biểu đồ doanh thu\n  const [view, setView] = useState(\"month\");\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [dailyRevenueData, setDailyRevenueData] = useState([]);\n\n  const now = new Date();\n  const currentMonth = now.getMonth();\n  const currentYear = now.getFullYear();\n\n  // Tìm dữ liệu tháng này và tháng trước\n  const thisMonthData = monthlyRevenueData.find(\n    (item) =>\n      item.month === now.toLocaleString(\"vi-VN\", { month: \"long\" }) &&\n      item.year === currentYear\n  );\n\n  const prevMonthDate = new Date(currentYear, currentMonth - 1, 1);\n  const prevMonthData = monthlyRevenueData.find(\n    (item) =>\n      item.month === prevMonthDate.toLocaleString(\"vi-VN\", { month: \"long\" }) &&\n      item.year === prevMonthDate.getFullYear()\n  );\n\n  // Giá trị doanh thu\n  const revenueThisMonth = thisMonthData?.revenue || 0;\n  const revenuePrevMonth = prevMonthData?.revenue || 0;\n\n  // Lấy ngày hôm nay và hôm qua theo định dạng YYYY-MM-DD\n  const today = new Date();\n  const yesterday = new Date(today);\n  yesterday.setDate(today.getDate() - 1);\n\n  const todayStr = today.toISOString().split(\"T\")[0];\n  const yesterdayStr = yesterday.toISOString().split(\"T\")[0];\n\n  // Lọc đơn hàng hôm nay\n  const ordersToday = orders.filter((order) => {\n    const orderDate = new Date(order.createdAt).toISOString().split(\"T\")[0];\n    return orderDate === todayStr;\n  });\n\n  // Lọc đơn hàng hôm qua\n  const ordersYesterday = orders.filter((order) => {\n    const orderDate = new Date(order.createdAt).toISOString().split(\"T\")[0];\n    return orderDate === yesterdayStr;\n  });\n\n  // Tính tổng doanh thu hôm nay và hôm qua\n  const revenueToday = ordersToday.reduce(\n    (sum, order) => sum + parseFloat(order.price || 0),\n    0\n  );\n\n  const revenueYesterday = ordersYesterday.reduce(\n    (sum, order) => sum + parseFloat(order.price || 0),\n    0\n  );\nconst monthlyVisitors = React.useMemo(() => {\n  const arr = new Array(12).fill(0);\n  if (rawVisitorData) {\n    for (const [monthStr, count] of Object.entries(rawVisitorData)) {\n      const parts = monthStr.split(\"-\");\n      if (parts.length === 2) {\n        const monthIndex = parseInt(parts[1], 10) - 1;\n        if (monthIndex >= 0 && monthIndex < 12) {\n          arr[monthIndex] = count;\n        }\n      }\n    }\n  }\n  return arr;\n}, [rawVisitorData]);\n\n\n  // Gọi API lấy rawVisitorData qua Redux khi mount\n  useEffect(() => {\n    dispatch(fetchVisitorData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (selectedMonth !== null) {\n      const selectedMonthData = monthlyRevenueData[selectedMonth];\n      if (selectedMonthData) {\n        const monthIndex = new Date(\n          Date.parse(`${selectedMonthData.month} 1, ${selectedMonthData.year}`)\n        ).getMonth();\n        const year = selectedMonthData.year;\n        const daysInMonth = new Date(year, monthIndex + 1, 0).getDate();\n        const monthOrders = orders.filter((order) => {\n          const orderDate = new Date(order.createdAt);\n          return (\n            orderDate.getMonth() === monthIndex &&\n            orderDate.getFullYear() === year\n          );\n        });\n        const dailyRevenue = {};\n        monthOrders.forEach((order) => {\n          const orderDate = new Date(order.createdAt);\n          const day = orderDate.getDate();\n          dailyRevenue[day] =\n            (dailyRevenue[day] || 0) + parseFloat(order.price || 0);\n        });\n        const dailyData = Array.from({ length: daysInMonth }, (_, i) => {\n          const day = i + 1;\n          return {\n            day: `Ngày ${day}`,\n            value: dailyRevenue[day] || 0,\n          };\n        });\n\n        setDailyRevenueData(dailyData);\n      }\n    }\n  }, [selectedMonth, monthlyRevenueData, orders]);\n\n  console.log(\"Dữ liệu visitor từ API:\", rawVisitorData);\n// Kết quả ví dụ: { \"2025-05\": 100, \"2025-10\": 200 }\n  console.log(\"Mảng monthlyVisitors sau xử lý:\", monthlyVisitors);\n// Kết quả mong đợi: [0, 0, 0, 0, 100, 0, 0, 0, 0, 200, 0, 0]\n// Chỉ số 4 (tháng 5) = 100, chỉ số 9 (tháng 10) = 200\n\n\n\n  // Chart options cho doanh thu theo tháng\n  const monthChartOptions = {\n    chart: {\n      type: \"bar\",\n      background: \"transparent\",\n      toolbar: { show: false },\n      fontFamily: \"'Roboto', sans-serif\",\n      events: {\n        dataPointSelection: function (event, chartContext, config) {\n          setSelectedMonth(config.dataPointIndex);\n          setView(\"day\");\n        },\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    plotOptions: {\n      bar: {\n        borderRadius: 4,\n        columnWidth: \"65%\",\n        distributed: false,\n      },\n    },\n    states: {\n      hover: {\n        filter: {\n          type: \"darken\",\n          value: 0.85,\n        },\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: \"darken\",\n          value: 0.85,\n        },\n      },\n    },\n    xaxis: {\n      categories: monthLabels,\n      labels: {\n        style: {\n          fontSize: \"12px\",\n          fontFamily: \"'Roboto', sans-serif\",\n        },\n      },\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    yaxis: [\n      {\n        title: {\n          text: \"Doanh thu (VND)\",\n          style: {\n            fontSize: \"13px\",\n            fontFamily: \"'Roboto', sans-serif\",\n            fontWeight: 500,\n          },\n        },\n        labels: {\n          formatter: function (val) {\n            return val.toLocaleString() + \" đ\";\n          },\n          style: {\n            fontSize: \"12px\",\n          },\n        },\n      },\n      {\n        opposite: true, // Hiển thị bên phải\n        title: {\n          text: \"Số lượng truy cập\",\n          style: {\n            fontSize: \"13px\",\n            fontFamily: \"'Roboto', sans-serif\",\n            fontWeight: 500,\n          },\n        },\n        labels: {\n          formatter: function (val) {\n            return val.toLocaleString();\n          },\n          style: {\n            fontSize: \"12px\",\n          },\n        },\n      },\n    ],\n    colors: [\"#4F46E5\", \"#22c55e\"], // Thêm màu cho cột thứ 2\n    tooltip: {\n      shared: true,\n      intersect: false,\n      y: [\n        {\n          formatter: function (val) {\n            return `${val?.toLocaleString() ?? \"0\"} VND`; // Xử lý undefined\n          },\n        },\n        {\n          formatter: function (val) {\n            return `${val?.toLocaleString() ?? \"0\"} lượt`; // Xử lý undefined\n          },\n        },\n      ],\n      theme: themeReducer === \"theme-mode-dark\" ? \"dark\" : \"light\",\n    },\n  };\n\n  const handleOrderClick = (orderId) => {\n    navigate(`/admin/order/${orderId}`);\n  };\n\n  // Chart options cho doanh thu theo ngày\n  const dayChartOptions = {\n    chart: {\n      type: \"area\",\n      background: \"transparent\",\n      toolbar: { show: false },\n      fontFamily: \"'Roboto', sans-serif\",\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n      width: 3,\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shadeIntensity: 1,\n        opacityFrom: 0.7,\n        opacityTo: 0.2,\n        stops: [0, 90, 100],\n      },\n    },\n    xaxis: {\n      categories: dailyRevenueData.map((item) => item.day),\n      labels: {\n        style: {\n          fontSize: \"12px\",\n          fontFamily: \"'Roboto', sans-serif\",\n        },\n        rotate: -45,\n        rotateAlways: false,\n        hideOverlappingLabels: true,\n      },\n      axisBorder: {\n        show: false,\n      },\n      axisTicks: {\n        show: false,\n      },\n    },\n    yaxis: [\n      {\n        title: {\n          text: \"Doanh thu (VND)\",\n          style: {\n            fontSize: \"13px\",\n            fontFamily: \"'Roboto', sans-serif\",\n            fontWeight: 500,\n          },\n        },\n        labels: {\n          formatter: function (val) {\n            return val.toLocaleString() + \" đ\";\n          },\n          style: {\n            fontSize: \"12px\",\n          },\n        },\n      },\n      {\n        opposite: true, // Hiển thị bên phải\n        title: {\n          text: \"Số lượng truy cập\",\n          style: {\n            fontSize: \"13px\",\n            fontFamily: \"'Roboto', sans-serif\",\n            fontWeight: 500,\n          },\n        },\n        labels: {\n          formatter: function (val) {\n            return val.toLocaleString();\n          },\n          style: {\n            fontSize: \"12px\",\n          },\n        },\n      },\n    ],\n    colors: [\"#f59e0b\", \"#22c55e\"],\n    tooltip: {\n      shared: true,\n      intersect: false,\n      y: [\n        {\n          formatter: function (val) {\n            return `${val.toLocaleString()} VND`;\n          },\n        },\n        {\n          formatter: function (val) {\n            return `${val.toLocaleString()} lượt`;\n          },\n        },\n      ],\n      theme: themeReducer === \"theme-mode-dark\" ? \"dark\" : \"light\",\n    },\n  };\n\n  useEffect(() => {\n    dispatch(get_allOrder());\n  }, [dispatch]);\n  useEffect(() => {\n    const obj = {\n      parPage: parseInt(parPage),\n      page: parseInt(currentPage),\n      sortField,\n      sortOrder,\n    };\n    dispatch(get_allRestaurant(obj));\n  }, [parPage, currentPage, sortField, sortOrder, dispatch]);\n\n  useEffect(() => {\n    const obj = {\n      parPage: parseInt(parPage),\n      page: parseInt(currentPage),\n      sortField,\n      sortOrder,\n    };\n    dispatch(get_allDriver(obj));\n  }, [parPage, currentPage, sortField, sortOrder, dispatch]);\n\n  const topOrders = orders.slice(0, 5);\n  const getRevenue = calculateDailyRevenue(orders);\n  const statusCards = [\n    {\n      icon: \"bx bx-shopping-bag\",\n      count: formatCurrency(getRevenue.totalRevenue),\n      title: \"Doanh thu hôm nay\",\n      color: \"text-blue-500\",\n      bgColor: \"bg-blue-100\",\n      borderColor: \"border-blue-200\",\n    },\n    {\n      icon: \"bx bx-home\",\n      count: totalRestaurant,\n      title: \"Tổng nhà hàng\",\n      color: \"text-green-500\",\n      bgColor: \"bg-green-100\",\n      borderColor: \"border-green-200\",\n      path: \"/admin/restaurant\",\n    },\n    {\n      icon: \"bx bx-user\",\n      count: totalDrivers,\n      title: \"Tổng shipper\",\n      color: \"text-amber-500\",\n      bgColor: \"bg-amber-100\",\n      borderColor: \"border-amber-200\",\n      path: \"/admin/shipper\", // Thêm path\n    },\n    {\n      icon: \"bx bx-receipt\",\n      count: totalOrders,\n      title: \"Tổng đơn hàng\",\n      color: \"text-rose-500\",\n      bgColor: \"bg-rose-100\",\n      borderColor: \"border-rose-200\",\n      path: \"/admin/order\", // Thêm path\n    },\n  ];\n\n  const getStatusText = (status) => {\n    switch (status) {\n      case \"PAID\":\n        return \"Đơn hàng mới\";\n      case \"PREPARING_ORDER\":\n        return \"Đang chuẩn bị\";\n      case \"ORDER_CANCELED\":\n        return \"Đơn bị hủy\";\n      case \"ORDER_RECEIVED\":\n        return \"Đã giao cho shipper\";\n      case \"DELIVERING\":\n        return \"Shipper đang lấy đơn\";\n      case \"ORDER_CONFIRMED\":\n        return \"Đã giao xong\";\n      case \"UNPAID\":\n        return \"Chưa thanh toán\";\n      default:\n        return \"Không xác định\";\n    }\n  };\n  // Hàm lấy trạng thái class dựa trên order_status\n  const getStatusClassName = (status) => {\n    switch (status) {\n      case \"PAID\":\n        return \"bg-green-100 text-green-800\";\n      case \"UNPAID\":\n        return \"bg-red-100 text-red-800\";\n      case \"PREPARING_ORDER\":\n        return \"bg-blue-100 text-blue-800\";\n      case \"ORDER_CANCELED\":\n        return \"bg-red-100 text-red-800\";\n      case \"ORDER_RECEIVED\":\n        return \"bg-purple-100 text-purple-800\";\n      case \"DELIVERING\":\n        return \"bg-yellow-100 text-yellow-800\";\n      case \"ORDER_CONFIRMED\":\n        return \"bg-indigo-100 text-indigo-800\";\n      default:\n        return \"bg-gray-100 text-gray-800\";\n    }\n  };\n\n  return (\n    <div className=\"p-6 bg-gray-50\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h2 className=\"text-4xl font-bold text-gray-800\">Dashboard</h2>\n        <div className=\"flex items-center justify-end text-base font-semibold text-gray-800 bg-blue-50 rounded px-3 py-1 shadow w-fit ml-auto\">\n          {/* Icon lịch */}\n          <svg\n            className=\"w-5 h-5 text-blue-400 mr-2\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            viewBox=\"0 0 24 24\"\n          >\n            <rect\n              x=\"3\"\n              y=\"4\"\n              width=\"18\"\n              height=\"18\"\n              rx=\"2\"\n              ry=\"2\"\n              stroke=\"currentColor\"\n            />\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M16 2v4M8 2v4M3 10h18\"\n            />\n          </svg>\n          {/* Ngày tháng */}\n          {new Date().toLocaleDateString(\"vi-VN\", {\n            day: \"2-digit\",\n            month: \"2-digit\",\n            year: \"numeric\",\n          })}\n        </div>\n      </div>\n      {/* Status Cards */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8\">\n        {/* Cột trái: 4 status card dọc (chiếm 1/3 màn hình) */}\n        <div className=\"lg:col-span-1\">\n          <div className=\"grid grid-cols-2 gap-5 h-full\">\n            {statusCards.map((item, index) => {\n              const cardWithLink = item.path ? (\n                <Link\n                  key={index}\n                  to={item.path}\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <div\n                    className={`bg-white rounded-lg shadow-sm border ${item.borderColor} overflow-hidden transition-all duration-300 hover:shadow-md h-full`}\n                  >\n                    <div className={`${item.bgColor} px-4 py-2`}>\n                      <div className=\"flex items-center justify-between\">\n                        <h3 className=\"font-medium text-gray-700\">\n                          {item.title}\n                        </h3>\n                        <i className={`${item.icon} text-xl ${item.color}`}></i>\n                      </div>\n                    </div>\n                    <div className=\"px-4 py-3\">\n                      <div className=\"text-2xl font-bold text-gray-800\">\n                        {item.count}\n                      </div>\n                    </div>\n                  </div>\n                </Link>\n              ) : (\n                <div\n                  key={index}\n                  className={`bg-white rounded-lg shadow-sm border ${item.borderColor} overflow-hidden transition-all duration-300 hover:shadow-md h-full`}\n                >\n                  <div className={`${item.bgColor} px-4 py-2`}>\n                    <div className=\"flex items-center justify-between\">\n                      <h3 className=\"font-medium text-gray-700\">\n                        {item.title}\n                      </h3>\n                      <i className={`${item.icon} text-xl ${item.color}`}></i>\n                    </div>\n                  </div>\n                  <div className=\"px-4 py-3\">\n                    <div className=\"text-2xl font-bold text-gray-800\">\n                      {item.count}\n                    </div>\n                  </div>\n                </div>\n              );\n              return cardWithLink;\n            })}\n          </div>\n        </div>\n        {/* Cột phải: 2 card doanh thu (chiếm 2/3 màn hình) */}\n        <div className=\"lg:col-span-2 flex gap-6\">\n          {/* Card doanh thu tháng trước & tháng này */}\n          <div className=\"bg-white rounded-lg shadow border flex-1 flex flex-col items-start p-5\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"bg-gray-100 rounded-full w-12 h-12 flex items-center justify-center mr-4\">\n                <svg\n                  className=\"w-7 h-7 text-green-600\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                </svg>\n              </div>\n              <div>\n                <div className=\"font-medium text-gray-700 text-lg\">\n                  Doanh thu tháng\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-col w-full gap-2\">\n              <div className=\"flex justify-between items-center w-full\">\n                <span className=\"text-gray-500 text-base font-semibold\">{`${now.toLocaleString(\n                  \"vi-VN\",\n                  { month: \"long\" }\n                )}/${currentYear}`}</span>\n                <span className=\"text-3xl font-extrabold text-green-600\">\n                  {revenueThisMonth.toLocaleString(\"vi-VN\")} ₫\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center w-full\">\n                <span className=\"text-gray-500 text-base font-semibold\">{`${prevMonthDate.toLocaleString(\n                  \"vi-VN\",\n                  { month: \"long\" }\n                )}/${prevMonthDate.getFullYear()}`}</span>\n                <span className=\"text-2xl font-bold text-gray-700\">\n                  {revenuePrevMonth.toLocaleString(\"vi-VN\")} ₫\n                </span>\n              </div>\n            </div>\n          </div>\n          {/* Card doanh thu hôm qua & hôm nay */}\n          <div className=\"bg-white rounded-lg shadow border flex-1 flex flex-col items-start p-5\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"bg-gray-100 rounded-full w-12 h-12 flex items-center justify-center mr-4\">\n                <svg\n                  className=\"w-7 h-7 text-blue-500\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                </svg>\n              </div>\n              <div>\n                <div className=\"font-medium text-gray-700 text-lg\">\n                  Doanh thu ngày\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-col w-full gap-2\">\n              <div className=\"flex justify-between items-center w-full\">\n                <span className=\"text-gray-500 text-base font-semibold\">\n                  Hôm nay\n                </span>\n                <span className=\"text-3xl font-extrabold text-blue-600\">\n                  {revenueToday.toLocaleString(\"vi-VN\")} ₫\n                </span>\n              </div>\n              <div className=\"flex justify-between items-center w-full\">\n                <span className=\"text-gray-500 text-base font-semibold\">\n                  Hôm qua\n                </span>\n                <span className=\"text-2xl font-bold text-gray-700\">\n                  {revenueYesterday.toLocaleString(\"vi-VN\")} ₫\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\n        {/* Chart Section */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n          <div className=\"border-b border-gray-200 px-5 py-4\">\n            <h3 className=\"text-lg font-semibold text-gray-800\">\n              Biểu đồ doanh thu\n            </h3>\n          </div>\n          <div className=\"p-5\">\n            {view === \"month\" && (\n              <div>\n                <div className=\"flex gap-4 mb-4\">\n                  <button\n                    className=\"px-4 py-2 rounded-md bg-indigo-600 text-white text-sm font-medium transition-colors hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                    disabled\n                  >\n                    Theo tháng\n                  </button>\n                </div>\n                <Chart\n                  options={monthChartOptions}\n                  series={[\n                    { name: \"Doanh thu\", data: revenueValues, type: \"column\" },\n                    {\n                      name: \"Số lượng truy cập\",\n                      data: monthlyVisitors,\n                      type: \"column\",\n                    },\n                  ]}\n                  type=\"bar\"\n                  height={320}\n                />\n                <p className=\"text-sm text-gray-500 mt-4 text-center\">\n                  * Bấm vào cột tháng để xem chi tiết doanh thu từng ngày\n                </p>\n              </div>\n            )}\n\n            {view === \"day\" && selectedMonth !== null && (\n              <div>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <button\n                    className=\"px-4 py-2 rounded-md bg-gray-100 text-gray-700 text-sm font-medium transition-colors hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-300 focus:ring-offset-2 flex items-center\"\n                    onClick={() => {\n                      setView(\"month\");\n                      setSelectedMonth(null);\n                    }}\n                  >\n                    <i className=\"bx bx-arrow-back mr-1\"></i>\n                    Quay lại\n                  </button>\n                  <h4 className=\"text-lg font-medium text-gray-700\">\n                    {monthlyRevenueData[selectedMonth]?.month}{\" \"}\n                    {monthlyRevenueData[selectedMonth]?.year}\n                  </h4>\n                </div>\n\n                {dailyRevenueData.length > 0 ? (\n                  <Chart\n                    options={dayChartOptions}\n                    series={[\n                      {\n                        name: `Doanh thu ${monthlyRevenueData[selectedMonth]?.month}`,\n                        data: dailyRevenueData.map((item) => item.value),\n                        type: \"area\",\n                      },\n                      {\n                        name: \"Số lượng truy cập\",\n                        data: dailyVisitorsByMonth[selectedMonth] || [],\n                        type: \"area\",\n                      },\n                    ]}\n                    type=\"area\"\n                    height={320}\n                  />\n                ) : (\n                  <div className=\"flex flex-col items-center justify-center h-80\">\n                    <i className=\"bx bx-line-chart text-4xl text-gray-300 mb-3\"></i>\n                    <p className=\"text-gray-500\">\n                      Không có dữ liệu doanh thu cho tháng này\n                    </p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Recent Orders */}\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\n          <div className=\"border-b border-gray-200 px-5 py-4 flex justify-between items-center\">\n            <h3 className=\"text-lg font-semibold text-gray-800\">\n              Đơn hàng gần đây\n            </h3>\n            <Link\n              to=\"/admin/order\"\n              className=\"text-sm font-medium text-indigo-600 hover:text-indigo-800 flex items-center\"\n            >\n              Xem tất cả\n              <i className=\"bx bx-chevron-right ml-1\"></i>\n            </Link>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"bg-gray-50\">\n                  <th className=\"px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                    ID\n                  </th>\n                  <th className=\"px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                    Người nhận\n                  </th>\n                  <th className=\"px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                    Trạng thái\n                  </th>\n                  <th className=\"px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                    Giá trị\n                  </th>\n                  <th className=\"px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                    Liên hệ\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-200\">\n                {topOrders.length > 0 ? (\n                  topOrders.map((order, idx) => (\n                    <tr\n                      key={order.id || idx}\n                      className=\"hover:bg-gray-50 transition-colors\"\n                      onClick={() => handleOrderClick(order.id)}\n                    >\n                      <td className=\"px-5 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                        #{order.id}\n                      </td>\n                      <td className=\"px-5 py-4 whitespace-nowrap text-sm text-gray-700\">\n                        {order.receiver_name}\n                      </td>\n                      <td className=\"px-5 py-4 whitespace-nowrap\">\n                        <span\n                          className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusClassName(\n                            order.order_status\n                          )}`}\n                        >\n                          {getStatusText(order.order_status) || \"N/A\"}\n                        </span>\n                      </td>\n                      <td className=\"px-5 py-4 whitespace-nowrap text-sm text-gray-700\">\n                        {parseInt(order.price).toLocaleString(\"vi-VN\")} đ\n                      </td>\n                      <td className=\"px-5 py-4 whitespace-nowrap text-sm text-gray-700\">\n                        <div className=\"flex items-center\">\n                          <i className=\"bx bx-phone mr-2 text-gray-500\"></i>\n                          {order.phone_number}\n                        </div>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td colSpan=\"5\" className=\"px-5 py-8 text-center\">\n                      <div className=\"flex flex-col items-center\">\n                        <i className=\"bx bx-package text-3xl text-gray-300 mb-2\"></i>\n                        <span className=\"text-gray-500\">\n                          Không có dữ liệu đơn hàng\n                        </span>\n                      </div>\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n\n          {topOrders.length > 0 && (\n            <div className=\"px-5 py-3 bg-gray-50 border-t border-gray-200 text-xs text-gray-500\">\n              Hiển thị {topOrders.length} trong tổng số {totalOrders} đơn hàng\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","export const checkCouponStatus = (startDate, endDate, isActive) => {\n  const now = new Date();\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n\n  if (!isActive)\n    return {\n      status: \"inactive\",\n      text: \"Đã khóa\",\n      className: \"bg-red-100 text-red-800\",\n    };\n\n  if (now < start) {\n    return {\n      status: \"pending\",\n      text: \"Chưa bắt đầu\",\n      className: \"bg-yellow-100 text-yellow-800\",\n    };\n  }\n\n  if (now > end) {\n    return {\n      status: \"expired\",\n      text: \"Đã hết hạn\",\n      className: \"bg-red-100 text-red-800\",\n    };\n  }\n\n  return {\n    status: \"active\",\n    text: \"Đang hoạt động\",\n    className: \"bg-green-100 text-green-800\",\n  };\n};\n\n/* Calculate daily revenue from orders\n * @param {Array} orders - Array of orders\n * @param {Date} date - Date to calculate revenue for\n * @returns {Object} Revenue details\n */\nexport const calculateDailyRevenue = (orders, date = new Date()) => {\n  // Convert input date to start and end of day\n  const startOfDay = new Date(date);\n  startOfDay.setHours(0, 0, 0, 0);\n  const endOfDay = new Date(date);\n  endOfDay.setHours(23, 59, 59, 999);\n\n  // Filter orders for the specified date\n  const dailyOrders = orders.filter((order) => {\n    const orderDate = new Date(order.order_date);\n    return orderDate >= startOfDay && orderDate <= endOfDay;\n  });\n\n  // Calculate totals\n  const revenue = dailyOrders.reduce((total, order) => {\n    // Only count completed orders\n    if (order.order_status === \"ORDER_CONFIRMED\") {\n      const orderTotal =\n        parseFloat(order.price) + parseFloat(order.delivery_fee);\n      return total + orderTotal;\n    }\n    return total;\n  }, 0);\n\n  return {\n    totalRevenue: revenue,\n    orderCount: dailyOrders.length,\n    completedOrders: dailyOrders.filter(\n      (order) => order.order_status === \"ORDER_CONFIRMED\"\n    ).length,\n    canceledOrders: dailyOrders.filter(\n      (order) => order.order_status === \"ORDER_CANCELED\"\n    ).length,\n    averageOrderValue:\n      dailyOrders.length > 0 ? revenue / dailyOrders.length : 0,\n  };\n};\nexport const formatCurrency = (amount) => {\n  return new Intl.NumberFormat(\"vi-VN\", {\n    style: \"currency\",\n    currency: \"VND\",\n  }).format(amount);\n};\n/**\n * Calculate revenue array for the last 12 months\n * @param {Array} orders - Array of orders\n * @returns {Array} Array of monthly revenue data\n */\nexport const getMonthlyRevenueArray = (orders) => {\n  const months = [];\n  const today = new Date();\n\n  // Get last 12 months\n  for (let i = 11; i >= 0; i--) {\n    const date = new Date(today.getFullYear(), today.getMonth() - i, 1);\n    const startOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n    const endOfMonth = new Date(\n      date.getFullYear(),\n      date.getMonth() + 1,\n      0,\n      23,\n      59,\n      59,\n      999\n    );\n\n    // Filter orders for this month\n    const monthlyOrders = orders.filter((order) => {\n      const orderDate = new Date(order.order_date);\n      return orderDate >= startOfMonth && orderDate <= endOfMonth;\n    });\n\n    // Calculate revenue for confirmed orders\n    const revenue = monthlyOrders.reduce((total, order) => {\n      if (order.order_status === \"ORDER_CONFIRMED\") {\n        return total + parseFloat(order.price);\n      }\n      return total;\n    }, 0);\n\n    months.push({\n      month: date.toLocaleString(\"vi-VN\", { month: \"long\" }),\n      shortMonth: date.toLocaleString(\"vi-VN\", { month: \"short\" }),\n      year: date.getFullYear(),\n      revenue: revenue,\n      formattedRevenue: formatCurrency(revenue),\n      orderCount: monthlyOrders.length,\n      completedOrders: monthlyOrders.filter(\n        (o) => o.order_status === \"ORDER_CONFIRMED\"\n      ).length,\n    });\n  }\n\n  return months;\n};\n"],"names":["dailyVisitorsByMonth","Array","from","length","Math","floor","random","Dashboard","_monthlyRevenueData$s","_monthlyRevenueData$s2","_monthlyRevenueData$s3","navigate","useNavigate","dispatch","useDispatch","currentPage","useState","parPage","sortField","sortOrder","themeReducer","useSelector","state","ThemeReducer","mode","rawVisitorData","dashboard","totalRestaurant","restaurant","totalDrivers","driver","orders","totalOrders","order","monthlyRevenueData","getMonthlyRevenueArray","revenueValues","fill","forEach","item","monthIndex","Date","month","year","getMonth","revenue","view","setView","selectedMonth","setSelectedMonth","dailyRevenueData","setDailyRevenueData","now","currentMonth","currentYear","getFullYear","thisMonthData","find","toLocaleString","prevMonthDate","prevMonthData","revenueThisMonth","revenuePrevMonth","today","yesterday","setDate","getDate","todayStr","toISOString","split","yesterdayStr","ordersToday","filter","createdAt","ordersYesterday","revenueToday","reduce","sum","parseFloat","price","revenueYesterday","monthlyVisitors","React","arr","monthStr","count","Object","entries","parts","parseInt","useEffect","fetchVisitorData","selectedMonthData","parse","daysInMonth","monthOrders","orderDate","dailyRevenue","day","dailyData","_","i","value","console","log","monthChartOptions","chart","type","background","toolbar","show","fontFamily","events","dataPointSelection","event","chartContext","config","dataPointIndex","dataLabels","enabled","plotOptions","bar","borderRadius","columnWidth","distributed","states","hover","active","allowMultipleDataPointsSelection","xaxis","categories","labels","style","fontSize","axisBorder","axisTicks","yaxis","title","text","fontWeight","formatter","val","opposite","colors","tooltip","shared","intersect","y","_val$toLocaleString","_val$toLocaleString2","theme","dayChartOptions","stroke","curve","width","gradient","shadeIntensity","opacityFrom","opacityTo","stops","map","rotate","rotateAlways","hideOverlappingLabels","get_allOrder","obj","page","get_allRestaurant","get_allDriver","topOrders","slice","getRevenue","calculateDailyRevenue","statusCards","icon","formatCurrency","totalRevenue","color","bgColor","borderColor","path","getStatusText","status","getStatusClassName","_jsxs","className","children","_jsx","strokeWidth","viewBox","x","height","rx","ry","strokeLinecap","strokeLinejoin","d","toLocaleDateString","index","Link","to","textDecoration","disabled","Chart","options","series","name","data","onClick","idx","handleOrderClick","orderId","id","receiver_name","order_status","phone_number","colSpan","checkCouponStatus","startDate","endDate","isActive","start","end","date","arguments","undefined","startOfDay","setHours","endOfDay","dailyOrders","order_date","total","delivery_fee","orderCount","completedOrders","canceledOrders","averageOrderValue","amount","Intl","NumberFormat","currency","format","months","startOfMonth","endOfMonth","monthlyOrders","push","shortMonth","formattedRevenue","o"],"sourceRoot":""}
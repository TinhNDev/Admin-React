{"version":3,"file":"static/js/941.4bbe7211.chunk.js","mappings":"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","sources":["pages/Dashboard.jsx","utils/utils.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { get_allOrder } from \"../store/reducers/orderReducer\";\r\nimport { get_allRestaurant } from \"../store/reducers/restaurantReducer\";\r\nimport { get_allDriver } from \"../store/reducers/driverReducer\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  calculateDailyRevenue,\r\n  formatCurrency,\r\n  getMonthlyRevenueArray,\r\n} from \"../utils/utils\";\r\n\r\nimport { fetchVisitorData } from \"../store/reducers/dashboardReducer\";\r\n\r\n// Số lượng người truy cập từng ngày trong từng tháng\r\nconst dailyVisitorsByMonth = {\r\n  0: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 1\r\n  1: Array.from({ length: 28 }, () => Math.floor(Math.random() * 101)), // Tháng 2\r\n  2: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 3\r\n  3: Array.from({ length: 30 }, () => Math.floor(Math.random() * 101)), // Tháng 4\r\n  4: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 5\r\n  5: Array.from({ length: 30 }, () => Math.floor(Math.random() * 101)), // Tháng 6\r\n  6: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 7\r\n  7: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 8\r\n  8: Array.from({ length: 30 }, () => Math.floor(Math.random() * 101)), // Tháng 9\r\n  9: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 10\r\n  10: Array.from({ length: 30 }, () => Math.floor(Math.random() * 101)), // Tháng 11\r\n  11: Array.from({ length: 31 }, () => Math.floor(Math.random() * 101)), // Tháng 12\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [currentPage] = useState(1);\r\n  const [parPage] = useState(5);\r\n  const [sortField] = useState(\"\");\r\n  const [sortOrder] = useState(\"asc\");\r\n\r\n  const themeReducer = useSelector((state) => state.ThemeReducer.mode);\r\n  const { rawVisitorData } = useSelector((state) => state.dashboard);\r\n\r\n  const { totalRestaurant = 0 } = useSelector(\r\n    (state) => state.restaurant || {}\r\n  );\r\n  const { totalDrivers = 0 } = useSelector((state) => state.driver || {});\r\n  const { orders = [], totalOrders = 0 } = useSelector(\r\n    (state) => state.order || {}\r\n  );\r\n  const monthlyRevenueData = getMonthlyRevenueArray(orders);\r\n\r\n  \r\n\r\n  // Extract data for chart\r\n  const monthLabels = [\r\n    \"Tháng 1\", \"Tháng 2\", \"Tháng 3\", \"Tháng 4\", \r\n    \"Tháng 5\", \"Tháng 6\", \"Tháng 7\", \"Tháng 8\",\r\n    \"Tháng 9\", \"Tháng 10\", \"Tháng 11\", \"Tháng 12\"\r\n  ];\r\n    const revenueValues = new Array(12).fill(0);\r\n  monthlyRevenueData.forEach((item) => {\r\n    const monthIndex = new Date(`${item.month} 1, ${item.year}`).getMonth();\r\n    revenueValues[monthIndex] = item.revenue;\r\n  });\r\n\r\n  // Biểu đồ doanh thu\r\n  const [view, setView] = useState(\"month\");\r\n  const [selectedMonth, setSelectedMonth] = useState(null);\r\n  const [dailyRevenueData, setDailyRevenueData] = useState([]);\r\n\r\n  const now = new Date();\r\n  const currentMonth = now.getMonth();\r\n  const currentYear = now.getFullYear();\r\n\r\n  // Tìm dữ liệu tháng này và tháng trước\r\n  const thisMonthData = monthlyRevenueData.find(\r\n    (item) =>\r\n      item.month === now.toLocaleString(\"vi-VN\", { month: \"long\" }) &&\r\n      item.year === currentYear\r\n  );\r\n\r\n  const prevMonthDate = new Date(currentYear, currentMonth - 1, 1);\r\n  const prevMonthData = monthlyRevenueData.find(\r\n    (item) =>\r\n      item.month === prevMonthDate.toLocaleString(\"vi-VN\", { month: \"long\" }) &&\r\n      item.year === prevMonthDate.getFullYear()\r\n  );\r\n\r\n  // Giá trị doanh thu\r\n  const revenueThisMonth = thisMonthData?.revenue || 0;\r\n  const revenuePrevMonth = prevMonthData?.revenue || 0;\r\n\r\n  // Lấy ngày hôm nay và hôm qua theo định dạng YYYY-MM-DD\r\n  const today = new Date();\r\n  const yesterday = new Date(today);\r\n  yesterday.setDate(today.getDate() - 1);\r\n\r\n  const todayStr = today.toISOString().split(\"T\")[0];\r\n  const yesterdayStr = yesterday.toISOString().split(\"T\")[0];\r\n\r\n  // Lọc đơn hàng hôm nay\r\n  const ordersToday = orders.filter((order) => {\r\n    const orderDate = new Date(order.createdAt).toISOString().split(\"T\")[0];\r\n    return orderDate === todayStr;\r\n  });\r\n\r\n  // Lọc đơn hàng hôm qua\r\n  const ordersYesterday = orders.filter((order) => {\r\n    const orderDate = new Date(order.createdAt).toISOString().split(\"T\")[0];\r\n    return orderDate === yesterdayStr;\r\n  });\r\n\r\n  // Tính tổng doanh thu hôm nay và hôm qua\r\n  const revenueToday = ordersToday.reduce(\r\n    (sum, order) => sum + parseFloat(order.price || 0),\r\n    0\r\n  );\r\n\r\n  const revenueYesterday = ordersYesterday.reduce(\r\n    (sum, order) => sum + parseFloat(order.price || 0),\r\n    0\r\n  );\r\nconst monthlyVisitors = React.useMemo(() => {\r\n  const arr = new Array(12).fill(0);\r\n  if (rawVisitorData) {\r\n    for (const [monthStr, count] of Object.entries(rawVisitorData)) {\r\n      const parts = monthStr.split(\"-\");\r\n      if (parts.length === 2) {\r\n        const monthIndex = parseInt(parts[1], 10) - 1;\r\n        if (monthIndex >= 0 && monthIndex < 12) {\r\n          arr[monthIndex] = count;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return arr;\r\n}, [rawVisitorData]);\r\n\r\n\r\n  // Gọi API lấy rawVisitorData qua Redux khi mount\r\n  useEffect(() => {\r\n    dispatch(fetchVisitorData());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (selectedMonth !== null) {\r\n      const selectedMonthData = monthlyRevenueData[selectedMonth];\r\n      if (selectedMonthData) {\r\n        const monthIndex = new Date(\r\n          Date.parse(`${selectedMonthData.month} 1, ${selectedMonthData.year}`)\r\n        ).getMonth();\r\n        const year = selectedMonthData.year;\r\n        const daysInMonth = new Date(year, monthIndex + 1, 0).getDate();\r\n        const monthOrders = orders.filter((order) => {\r\n          const orderDate = new Date(order.createdAt);\r\n          return (\r\n            orderDate.getMonth() === monthIndex &&\r\n            orderDate.getFullYear() === year\r\n          );\r\n        });\r\n        const dailyRevenue = {};\r\n        monthOrders.forEach((order) => {\r\n          const orderDate = new Date(order.createdAt);\r\n          const day = orderDate.getDate();\r\n          dailyRevenue[day] =\r\n            (dailyRevenue[day] || 0) + parseFloat(order.price || 0);\r\n        });\r\n        const dailyData = Array.from({ length: daysInMonth }, (_, i) => {\r\n          const day = i + 1;\r\n          return {\r\n            day: `Ngày ${day}`,\r\n            value: dailyRevenue[day] || 0,\r\n          };\r\n        });\r\n\r\n        setDailyRevenueData(dailyData);\r\n      }\r\n    }\r\n  }, [selectedMonth, monthlyRevenueData, orders]);\r\n\r\n  console.log(\"Dữ liệu visitor từ API:\", rawVisitorData);\r\n// Kết quả ví dụ: { \"2025-05\": 100, \"2025-10\": 200 }\r\n  console.log(\"Mảng monthlyVisitors sau xử lý:\", monthlyVisitors);\r\n// Kết quả mong đợi: [0, 0, 0, 0, 100, 0, 0, 0, 0, 200, 0, 0]\r\n// Chỉ số 4 (tháng 5) = 100, chỉ số 9 (tháng 10) = 200\r\n\r\n\r\n\r\n  // Chart options cho doanh thu theo tháng\r\n  const monthChartOptions = {\r\n    chart: {\r\n      type: \"bar\",\r\n      background: \"transparent\",\r\n      toolbar: { show: false },\r\n      fontFamily: \"'Roboto', sans-serif\",\r\n      events: {\r\n        dataPointSelection: function (event, chartContext, config) {\r\n          setSelectedMonth(config.dataPointIndex);\r\n          setView(\"day\");\r\n        },\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        borderRadius: 4,\r\n        columnWidth: \"65%\",\r\n        distributed: false,\r\n      },\r\n    },\r\n    states: {\r\n      hover: {\r\n        filter: {\r\n          type: \"darken\",\r\n          value: 0.85,\r\n        },\r\n      },\r\n      active: {\r\n        allowMultipleDataPointsSelection: false,\r\n        filter: {\r\n          type: \"darken\",\r\n          value: 0.85,\r\n        },\r\n      },\r\n    },\r\n    xaxis: {\r\n      categories: monthLabels,\r\n      labels: {\r\n        style: {\r\n          fontSize: \"12px\",\r\n          fontFamily: \"'Roboto', sans-serif\",\r\n        },\r\n      },\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n    },\r\n    yaxis: [\r\n      {\r\n        title: {\r\n          text: \"Doanh thu (VND)\",\r\n          style: {\r\n            fontSize: \"13px\",\r\n            fontFamily: \"'Roboto', sans-serif\",\r\n            fontWeight: 500,\r\n          },\r\n        },\r\n        labels: {\r\n          formatter: function (val) {\r\n            return val.toLocaleString() + \" đ\";\r\n          },\r\n          style: {\r\n            fontSize: \"12px\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        opposite: true, // Hiển thị bên phải\r\n        title: {\r\n          text: \"Số lượng truy cập\",\r\n          style: {\r\n            fontSize: \"13px\",\r\n            fontFamily: \"'Roboto', sans-serif\",\r\n            fontWeight: 500,\r\n          },\r\n        },\r\n        labels: {\r\n          formatter: function (val) {\r\n            return val.toLocaleString();\r\n          },\r\n          style: {\r\n            fontSize: \"12px\",\r\n          },\r\n        },\r\n      },\r\n    ],\r\n    colors: [\"#4F46E5\", \"#22c55e\"], // Thêm màu cho cột thứ 2\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false,\r\n      y: [\r\n        {\r\n          formatter: function (val) {\r\n            return `${val?.toLocaleString() ?? \"0\"} VND`; // Xử lý undefined\r\n          },\r\n        },\r\n        {\r\n          formatter: function (val) {\r\n            return `${val?.toLocaleString() ?? \"0\"} lượt`; // Xử lý undefined\r\n          },\r\n        },\r\n      ],\r\n      theme: themeReducer === \"theme-mode-dark\" ? \"dark\" : \"light\",\r\n    },\r\n  };\r\n\r\n  const handleOrderClick = (orderId) => {\r\n    navigate(`/admin/order/${orderId}`);\r\n  };\r\n\r\n  // Chart options cho doanh thu theo ngày\r\n  const dayChartOptions = {\r\n    chart: {\r\n      type: \"area\",\r\n      background: \"transparent\",\r\n      toolbar: { show: false },\r\n      fontFamily: \"'Roboto', sans-serif\",\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: \"smooth\",\r\n      width: 3,\r\n    },\r\n    fill: {\r\n      type: \"gradient\",\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.2,\r\n        stops: [0, 90, 100],\r\n      },\r\n    },\r\n    xaxis: {\r\n      categories: dailyRevenueData.map((item) => item.day),\r\n      labels: {\r\n        style: {\r\n          fontSize: \"12px\",\r\n          fontFamily: \"'Roboto', sans-serif\",\r\n        },\r\n        rotate: -45,\r\n        rotateAlways: false,\r\n        hideOverlappingLabels: true,\r\n      },\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n    },\r\n    yaxis: [\r\n      {\r\n        title: {\r\n          text: \"Doanh thu (VND)\",\r\n          style: {\r\n            fontSize: \"13px\",\r\n            fontFamily: \"'Roboto', sans-serif\",\r\n            fontWeight: 500,\r\n          },\r\n        },\r\n        labels: {\r\n          formatter: function (val) {\r\n            return val.toLocaleString() + \" đ\";\r\n          },\r\n          style: {\r\n            fontSize: \"12px\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        opposite: true, // Hiển thị bên phải\r\n        title: {\r\n          text: \"Số lượng truy cập\",\r\n          style: {\r\n            fontSize: \"13px\",\r\n            fontFamily: \"'Roboto', sans-serif\",\r\n            fontWeight: 500,\r\n          },\r\n        },\r\n        labels: {\r\n          formatter: function (val) {\r\n            return val.toLocaleString();\r\n          },\r\n          style: {\r\n            fontSize: \"12px\",\r\n          },\r\n        },\r\n      },\r\n    ],\r\n    colors: [\"#f59e0b\", \"#22c55e\"],\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false,\r\n      y: [\r\n        {\r\n          formatter: function (val) {\r\n            return `${val.toLocaleString()} VND`;\r\n          },\r\n        },\r\n        {\r\n          formatter: function (val) {\r\n            return `${val.toLocaleString()} lượt`;\r\n          },\r\n        },\r\n      ],\r\n      theme: themeReducer === \"theme-mode-dark\" ? \"dark\" : \"light\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(get_allOrder());\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    const obj = {\r\n      parPage: parseInt(parPage),\r\n      page: parseInt(currentPage),\r\n      sortField,\r\n      sortOrder,\r\n    };\r\n    dispatch(get_allRestaurant(obj));\r\n  }, [parPage, currentPage, sortField, sortOrder, dispatch]);\r\n\r\n  useEffect(() => {\r\n    const obj = {\r\n      parPage: parseInt(parPage),\r\n      page: parseInt(currentPage),\r\n      sortField,\r\n      sortOrder,\r\n    };\r\n    dispatch(get_allDriver(obj));\r\n  }, [parPage, currentPage, sortField, sortOrder, dispatch]);\r\n\r\n  const topOrders = orders.slice(0, 5);\r\n  const getRevenue = calculateDailyRevenue(orders);\r\n  const statusCards = [\r\n    {\r\n      icon: \"bx bx-shopping-bag\",\r\n      count: formatCurrency(getRevenue.totalRevenue),\r\n      title: \"Doanh thu hôm nay\",\r\n      color: \"text-blue-500\",\r\n      bgColor: \"bg-blue-100\",\r\n      borderColor: \"border-blue-200\",\r\n    },\r\n    {\r\n      icon: \"bx bx-home\",\r\n      count: totalRestaurant,\r\n      title: \"Tổng nhà hàng\",\r\n      color: \"text-green-500\",\r\n      bgColor: \"bg-green-100\",\r\n      borderColor: \"border-green-200\",\r\n      path: \"/admin/restaurant\",\r\n    },\r\n    {\r\n      icon: \"bx bx-user\",\r\n      count: totalDrivers,\r\n      title: \"Tổng shipper\",\r\n      color: \"text-amber-500\",\r\n      bgColor: \"bg-amber-100\",\r\n      borderColor: \"border-amber-200\",\r\n      path: \"/admin/shipper\", // Thêm path\r\n    },\r\n    {\r\n      icon: \"bx bx-receipt\",\r\n      count: totalOrders,\r\n      title: \"Tổng đơn hàng\",\r\n      color: \"text-rose-500\",\r\n      bgColor: \"bg-rose-100\",\r\n      borderColor: \"border-rose-200\",\r\n      path: \"/admin/order\", // Thêm path\r\n    },\r\n  ];\r\n\r\n  const getStatusText = (status) => {\r\n    switch (status) {\r\n      case \"PAID\":\r\n        return \"Đơn hàng mới\";\r\n      case \"PREPARING_ORDER\":\r\n        return \"Đang chuẩn bị\";\r\n      case \"ORDER_CANCELED\":\r\n        return \"Đơn bị hủy\";\r\n      case \"ORDER_RECEIVED\":\r\n        return \"Đã giao cho shipper\";\r\n      case \"DELIVERING\":\r\n        return \"Shipper đang lấy đơn\";\r\n      case \"ORDER_CONFIRMED\":\r\n        return \"Đã giao xong\";\r\n      case \"UNPAID\":\r\n        return \"Chưa thanh toán\";\r\n      default:\r\n        return \"Không xác định\";\r\n    }\r\n  };\r\n  // Hàm lấy trạng thái class dựa trên order_status\r\n  const getStatusClassName = (status) => {\r\n    switch (status) {\r\n      case \"PAID\":\r\n        return \"bg-green-100 text-green-800\";\r\n      case \"UNPAID\":\r\n        return \"bg-red-100 text-red-800\";\r\n      case \"PREPARING_ORDER\":\r\n        return \"bg-blue-100 text-blue-800\";\r\n      case \"ORDER_CANCELED\":\r\n        return \"bg-red-100 text-red-800\";\r\n      case \"ORDER_RECEIVED\":\r\n        return \"bg-purple-100 text-purple-800\";\r\n      case \"DELIVERING\":\r\n        return \"bg-yellow-100 text-yellow-800\";\r\n      case \"ORDER_CONFIRMED\":\r\n        return \"bg-indigo-100 text-indigo-800\";\r\n      default:\r\n        return \"bg-gray-100 text-gray-800\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 bg-gray-50\">\r\n      <div className=\"flex justify-between items-center mb-8\">\r\n        <h2 className=\"text-4xl font-bold text-gray-800\">Dashboard</h2>\r\n        <div className=\"flex items-center justify-end text-base font-semibold text-gray-800 bg-blue-50 rounded px-3 py-1 shadow w-fit ml-auto\">\r\n          {/* Icon lịch */}\r\n          <svg\r\n            className=\"w-5 h-5 text-blue-400 mr-2\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth={2}\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <rect\r\n              x=\"3\"\r\n              y=\"4\"\r\n              width=\"18\"\r\n              height=\"18\"\r\n              rx=\"2\"\r\n              ry=\"2\"\r\n              stroke=\"currentColor\"\r\n            />\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M16 2v4M8 2v4M3 10h18\"\r\n            />\r\n          </svg>\r\n          {/* Ngày tháng */}\r\n          {new Date().toLocaleDateString(\"vi-VN\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\",\r\n          })}\r\n        </div>\r\n      </div>\r\n      {/* Status Cards */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8\">\r\n        {/* Cột trái: 4 status card dọc (chiếm 1/3 màn hình) */}\r\n        <div className=\"lg:col-span-1\">\r\n          <div className=\"grid grid-cols-2 gap-5 h-full\">\r\n            {statusCards.map((item, index) => {\r\n              const cardWithLink = item.path ? (\r\n                <Link\r\n                  key={index}\r\n                  to={item.path}\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <div\r\n                    className={`bg-white rounded-lg shadow-sm border ${item.borderColor} overflow-hidden transition-all duration-300 hover:shadow-md h-full`}\r\n                  >\r\n                    <div className={`${item.bgColor} px-4 py-2`}>\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <h3 className=\"font-medium text-gray-700\">\r\n                          {item.title}\r\n                        </h3>\r\n                        <i className={`${item.icon} text-xl ${item.color}`}></i>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"px-4 py-3\">\r\n                      <div className=\"text-2xl font-bold text-gray-800\">\r\n                        {item.count}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              ) : (\r\n                <div\r\n                  key={index}\r\n                  className={`bg-white rounded-lg shadow-sm border ${item.borderColor} overflow-hidden transition-all duration-300 hover:shadow-md h-full`}\r\n                >\r\n                  <div className={`${item.bgColor} px-4 py-2`}>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <h3 className=\"font-medium text-gray-700\">\r\n                        {item.title}\r\n                      </h3>\r\n                      <i className={`${item.icon} text-xl ${item.color}`}></i>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"px-4 py-3\">\r\n                    <div className=\"text-2xl font-bold text-gray-800\">\r\n                      {item.count}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n              return cardWithLink;\r\n            })}\r\n          </div>\r\n        </div>\r\n        {/* Cột phải: 2 card doanh thu (chiếm 2/3 màn hình) */}\r\n        <div className=\"lg:col-span-2 flex gap-6\">\r\n          {/* Card doanh thu tháng trước & tháng này */}\r\n          <div className=\"bg-white rounded-lg shadow border flex-1 flex flex-col items-start p-5\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <div className=\"bg-gray-100 rounded-full w-12 h-12 flex items-center justify-center mr-4\">\r\n                <svg\r\n                  className=\"w-7 h-7 text-green-600\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth={2}\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <div className=\"font-medium text-gray-700 text-lg\">\r\n                  Doanh thu tháng\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-col w-full gap-2\">\r\n              <div className=\"flex justify-between items-center w-full\">\r\n                <span className=\"text-gray-500 text-base font-semibold\">{`${now.toLocaleString(\r\n                  \"vi-VN\",\r\n                  { month: \"long\" }\r\n                )}/${currentYear}`}</span>\r\n                <span className=\"text-3xl font-extrabold text-green-600\">\r\n                  {revenueThisMonth.toLocaleString(\"vi-VN\")} ₫\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center w-full\">\r\n                <span className=\"text-gray-500 text-base font-semibold\">{`${prevMonthDate.toLocaleString(\r\n                  \"vi-VN\",\r\n                  { month: \"long\" }\r\n                )}/${prevMonthDate.getFullYear()}`}</span>\r\n                <span className=\"text-2xl font-bold text-gray-700\">\r\n                  {revenuePrevMonth.toLocaleString(\"vi-VN\")} ₫\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Card doanh thu hôm qua & hôm nay */}\r\n          <div className=\"bg-white rounded-lg shadow border flex-1 flex flex-col items-start p-5\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <div className=\"bg-gray-100 rounded-full w-12 h-12 flex items-center justify-center mr-4\">\r\n                <svg\r\n                  className=\"w-7 h-7 text-blue-500\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth={2}\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                  />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <div className=\"font-medium text-gray-700 text-lg\">\r\n                  Doanh thu ngày\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-col w-full gap-2\">\r\n              <div className=\"flex justify-between items-center w-full\">\r\n                <span className=\"text-gray-500 text-base font-semibold\">\r\n                  Hôm nay\r\n                </span>\r\n                <span className=\"text-3xl font-extrabold text-blue-600\">\r\n                  {revenueToday.toLocaleString(\"vi-VN\")} ₫\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center w-full\">\r\n                <span className=\"text-gray-500 text-base font-semibold\">\r\n                  Hôm qua\r\n                </span>\r\n                <span className=\"text-2xl font-bold text-gray-700\">\r\n                  {revenueYesterday.toLocaleString(\"vi-VN\")} ₫\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\r\n        {/* Chart Section */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\r\n          <div className=\"border-b border-gray-200 px-5 py-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-800\">\r\n              Biểu đồ doanh thu\r\n            </h3>\r\n          </div>\r\n          <div className=\"p-5\">\r\n            {view === \"month\" && (\r\n              <div>\r\n                <div className=\"flex gap-4 mb-4\">\r\n                  <button\r\n                    className=\"px-4 py-2 rounded-md bg-indigo-600 text-white text-sm font-medium transition-colors hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n                    disabled\r\n                  >\r\n                    Theo tháng\r\n                  </button>\r\n                </div>\r\n                <Chart\r\n                  options={monthChartOptions}\r\n                  series={[\r\n                    { name: \"Doanh thu\", data: revenueValues, type: \"column\" },\r\n                    {\r\n                      name: \"Số lượng truy cập\",\r\n                      data: monthlyVisitors,\r\n                      type: \"column\",\r\n                    },\r\n                  ]}\r\n                  type=\"bar\"\r\n                  height={320}\r\n                />\r\n                <p className=\"text-sm text-gray-500 mt-4 text-center\">\r\n                  * Bấm vào cột tháng để xem chi tiết doanh thu từng ngày\r\n                </p>\r\n              </div>\r\n            )}\r\n\r\n            {view === \"day\" && selectedMonth !== null && (\r\n              <div>\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <button\r\n                    className=\"px-4 py-2 rounded-md bg-gray-100 text-gray-700 text-sm font-medium transition-colors hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-300 focus:ring-offset-2 flex items-center\"\r\n                    onClick={() => {\r\n                      setView(\"month\");\r\n                      setSelectedMonth(null);\r\n                    }}\r\n                  >\r\n                    <i className=\"bx bx-arrow-back mr-1\"></i>\r\n                    Quay lại\r\n                  </button>\r\n                  <h4 className=\"text-lg font-medium text-gray-700\">\r\n                    {monthlyRevenueData[selectedMonth]?.month}{\" \"}\r\n                    {monthlyRevenueData[selectedMonth]?.year}\r\n                  </h4>\r\n                </div>\r\n\r\n                {dailyRevenueData.length > 0 ? (\r\n                  <Chart\r\n                    options={dayChartOptions}\r\n                    series={[\r\n                      {\r\n                        name: `Doanh thu ${monthlyRevenueData[selectedMonth]?.month}`,\r\n                        data: dailyRevenueData.map((item) => item.value),\r\n                        type: \"area\",\r\n                      },\r\n                      {\r\n                        name: \"Số lượng truy cập\",\r\n                        data: dailyVisitorsByMonth[selectedMonth] || [],\r\n                        type: \"area\",\r\n                      },\r\n                    ]}\r\n                    type=\"area\"\r\n                    height={320}\r\n                  />\r\n                ) : (\r\n                  <div className=\"flex flex-col items-center justify-center h-80\">\r\n                    <i className=\"bx bx-line-chart text-4xl text-gray-300 mb-3\"></i>\r\n                    <p className=\"text-gray-500\">\r\n                      Không có dữ liệu doanh thu cho tháng này\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recent Orders */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\">\r\n          <div className=\"border-b border-gray-200 px-5 py-4 flex justify-between items-center\">\r\n            <h3 className=\"text-lg font-semibold text-gray-800\">\r\n              Đơn hàng gần đây\r\n            </h3>\r\n            <Link\r\n              to=\"/admin/order\"\r\n              className=\"text-sm font-medium text-indigo-600 hover:text-indigo-800 flex items-center\"\r\n            >\r\n              Xem tất cả\r\n              <i className=\"bx bx-chevron-right ml-1\"></i>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead>\r\n                <tr className=\"bg-gray-50\">\r\n                  <th className=\"px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    ID\r\n                  </th>\r\n                  <th className=\"px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Người nhận\r\n                  </th>\r\n                  <th className=\"px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Trạng thái\r\n                  </th>\r\n                  <th className=\"px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Giá trị\r\n                  </th>\r\n                  <th className=\"px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\r\n                    Liên hệ\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"divide-y divide-gray-200\">\r\n                {topOrders.length > 0 ? (\r\n                  topOrders.map((order, idx) => (\r\n                    <tr\r\n                      key={order.id || idx}\r\n                      className=\"hover:bg-gray-50 transition-colors\"\r\n                      onClick={() => handleOrderClick(order.id)}\r\n                    >\r\n                      <td className=\"px-5 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        #{order.id}\r\n                      </td>\r\n                      <td className=\"px-5 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                        {order.receiver_name}\r\n                      </td>\r\n                      <td className=\"px-5 py-4 whitespace-nowrap\">\r\n                        <span\r\n                          className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusClassName(\r\n                            order.order_status\r\n                          )}`}\r\n                        >\r\n                          {getStatusText(order.order_status) || \"N/A\"}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-5 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                        {parseInt(order.price).toLocaleString(\"vi-VN\")} đ\r\n                      </td>\r\n                      <td className=\"px-5 py-4 whitespace-nowrap text-sm text-gray-700\">\r\n                        <div className=\"flex items-center\">\r\n                          <i className=\"bx bx-phone mr-2 text-gray-500\"></i>\r\n                          {order.phone_number}\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"5\" className=\"px-5 py-8 text-center\">\r\n                      <div className=\"flex flex-col items-center\">\r\n                        <i className=\"bx bx-package text-3xl text-gray-300 mb-2\"></i>\r\n                        <span className=\"text-gray-500\">\r\n                          Không có dữ liệu đơn hàng\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {topOrders.length > 0 && (\r\n            <div className=\"px-5 py-3 bg-gray-50 border-t border-gray-200 text-xs text-gray-500\">\r\n              Hiển thị {topOrders.length} trong tổng số {totalOrders} đơn hàng\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","export const checkCouponStatus = (startDate, endDate, isActive) => {\r\n  const now = new Date();\r\n  const start = new Date(startDate);\r\n  const end = new Date(endDate);\r\n\r\n  if (!isActive)\r\n    return {\r\n      status: \"inactive\",\r\n      text: \"Đã khóa\",\r\n      className: \"bg-red-100 text-red-800\",\r\n    };\r\n\r\n  if (now < start) {\r\n    return {\r\n      status: \"pending\",\r\n      text: \"Chưa bắt đầu\",\r\n      className: \"bg-yellow-100 text-yellow-800\",\r\n    };\r\n  }\r\n\r\n  if (now > end) {\r\n    return {\r\n      status: \"expired\",\r\n      text: \"Đã hết hạn\",\r\n      className: \"bg-red-100 text-red-800\",\r\n    };\r\n  }\r\n\r\n  return {\r\n    status: \"active\",\r\n    text: \"Đang hoạt động\",\r\n    className: \"bg-green-100 text-green-800\",\r\n  };\r\n};\r\n\r\n/* Calculate daily revenue from orders\r\n * @param {Array} orders - Array of orders\r\n * @param {Date} date - Date to calculate revenue for\r\n * @returns {Object} Revenue details\r\n */\r\nexport const calculateDailyRevenue = (orders, date = new Date()) => {\r\n  // Convert input date to start and end of day\r\n  const startOfDay = new Date(date);\r\n  startOfDay.setHours(0, 0, 0, 0);\r\n  const endOfDay = new Date(date);\r\n  endOfDay.setHours(23, 59, 59, 999);\r\n\r\n  // Filter orders for the specified date\r\n  const dailyOrders = orders.filter((order) => {\r\n    const orderDate = new Date(order.order_date);\r\n    return orderDate >= startOfDay && orderDate <= endOfDay;\r\n  });\r\n\r\n  // Calculate totals\r\n  const revenue = dailyOrders.reduce((total, order) => {\r\n    // Only count completed orders\r\n    if (order.order_status === \"ORDER_CONFIRMED\") {\r\n      const orderTotal =\r\n        parseFloat(order.price) + parseFloat(order.delivery_fee);\r\n      return total + orderTotal;\r\n    }\r\n    return total;\r\n  }, 0);\r\n\r\n  return {\r\n    totalRevenue: revenue,\r\n    orderCount: dailyOrders.length,\r\n    completedOrders: dailyOrders.filter(\r\n      (order) => order.order_status === \"ORDER_CONFIRMED\"\r\n    ).length,\r\n    canceledOrders: dailyOrders.filter(\r\n      (order) => order.order_status === \"ORDER_CANCELED\"\r\n    ).length,\r\n    averageOrderValue:\r\n      dailyOrders.length > 0 ? revenue / dailyOrders.length : 0,\r\n  };\r\n};\r\nexport const formatCurrency = (amount) => {\r\n  return new Intl.NumberFormat(\"vi-VN\", {\r\n    style: \"currency\",\r\n    currency: \"VND\",\r\n  }).format(amount);\r\n};\r\n/**\r\n * Calculate revenue array for the last 12 months\r\n * @param {Array} orders - Array of orders\r\n * @returns {Array} Array of monthly revenue data\r\n */\r\nexport const getMonthlyRevenueArray = (orders) => {\r\n  const months = [];\r\n  const today = new Date();\r\n\r\n  // Get last 12 months\r\n  for (let i = 11; i >= 0; i--) {\r\n    const date = new Date(today.getFullYear(), today.getMonth() - i, 1);\r\n    const startOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const endOfMonth = new Date(\r\n      date.getFullYear(),\r\n      date.getMonth() + 1,\r\n      0,\r\n      23,\r\n      59,\r\n      59,\r\n      999\r\n    );\r\n\r\n    // Filter orders for this month\r\n    const monthlyOrders = orders.filter((order) => {\r\n      const orderDate = new Date(order.order_date);\r\n      return orderDate >= startOfMonth && orderDate <= endOfMonth;\r\n    });\r\n\r\n    // Calculate revenue for confirmed orders\r\n    const revenue = monthlyOrders.reduce((total, order) => {\r\n      if (order.order_status === \"ORDER_CONFIRMED\") {\r\n        return total + parseFloat(order.price);\r\n      }\r\n      return total;\r\n    }, 0);\r\n\r\n    months.push({\r\n      month: date.toLocaleString(\"vi-VN\", { month: \"long\" }),\r\n      shortMonth: date.toLocaleString(\"vi-VN\", { month: \"short\" }),\r\n      year: date.getFullYear(),\r\n      revenue: revenue,\r\n      formattedRevenue: formatCurrency(revenue),\r\n      orderCount: monthlyOrders.length,\r\n      completedOrders: monthlyOrders.filter(\r\n        (o) => o.order_status === \"ORDER_CONFIRMED\"\r\n      ).length,\r\n    });\r\n  }\r\n\r\n  return months;\r\n};\r\n"],"names":["dailyVisitorsByMonth","Array","from","length","Math","floor","random","Dashboard","_monthlyRevenueData$s","_monthlyRevenueData$s2","_monthlyRevenueData$s3","navigate","useNavigate","dispatch","useDispatch","currentPage","useState","parPage","sortField","sortOrder","themeReducer","useSelector","state","ThemeReducer","mode","rawVisitorData","dashboard","totalRestaurant","restaurant","totalDrivers","driver","orders","totalOrders","order","monthlyRevenueData","getMonthlyRevenueArray","revenueValues","fill","forEach","item","monthIndex","Date","concat","month","year","getMonth","revenue","view","setView","selectedMonth","setSelectedMonth","dailyRevenueData","setDailyRevenueData","now","currentMonth","currentYear","getFullYear","thisMonthData","find","toLocaleString","prevMonthDate","prevMonthData","revenueThisMonth","revenuePrevMonth","today","yesterday","setDate","getDate","todayStr","toISOString","split","yesterdayStr","ordersToday","filter","createdAt","ordersYesterday","revenueToday","reduce","sum","parseFloat","price","revenueYesterday","monthlyVisitors","React","arr","monthStr","count","Object","entries","parts","parseInt","useEffect","fetchVisitorData","selectedMonthData","parse","daysInMonth","monthOrders","orderDate","dailyRevenue","day","dailyData","_","i","value","console","log","monthChartOptions","chart","type","background","toolbar","show","fontFamily","events","dataPointSelection","event","chartContext","config","dataPointIndex","dataLabels","enabled","plotOptions","bar","borderRadius","columnWidth","distributed","states","hover","active","allowMultipleDataPointsSelection","xaxis","categories","labels","style","fontSize","axisBorder","axisTicks","yaxis","title","text","fontWeight","formatter","val","opposite","colors","tooltip","shared","intersect","y","_val$toLocaleString","_val$toLocaleString2","theme","dayChartOptions","stroke","curve","width","gradient","shadeIntensity","opacityFrom","opacityTo","stops","map","rotate","rotateAlways","hideOverlappingLabels","get_allOrder","obj","page","get_allRestaurant","get_allDriver","topOrders","slice","getRevenue","calculateDailyRevenue","statusCards","icon","formatCurrency","totalRevenue","color","bgColor","borderColor","path","getStatusText","status","getStatusClassName","_jsxs","className","children","_jsx","strokeWidth","viewBox","x","height","rx","ry","strokeLinecap","strokeLinejoin","d","toLocaleDateString","index","Link","to","textDecoration","disabled","Chart","options","series","name","data","onClick","idx","handleOrderClick","orderId","id","receiver_name","order_status","phone_number","colSpan","checkCouponStatus","startDate","endDate","isActive","start","end","date","arguments","undefined","startOfDay","setHours","endOfDay","dailyOrders","order_date","total","delivery_fee","orderCount","completedOrders","canceledOrders","averageOrderValue","amount","Intl","NumberFormat","currency","format","months","startOfMonth","endOfMonth","monthlyOrders","push","shortMonth","formattedRevenue","o"],"sourceRoot":""}
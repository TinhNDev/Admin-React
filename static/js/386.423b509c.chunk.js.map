{"version":3,"file":"static/js/386.423b509c.chunk.js","mappings":"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","sources":["pages/RestaurantDashboard/Product.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { add_product, messageClear } from '../../store/reducers/productReducer'; \n\nconst Product = () => {\n    const dispatch = useDispatch();\n    const productState = useSelector(state => state.product) || {};\n    const { loader = false, successMessage = '', errorMessage = '' } = productState;\n\n    const [productData, setProductData] = useState({\n        name: \"\",\n        //image: \"\",\n        descriptions: \"\",\n        price: 0,\n        quantity: 0,\n        is_available: true,\n        is_draft: false\n    });\n    \n    const [imageFile, setImageFile] = useState(null);\n\n    const handleChange = (e) => {\n        const { name, value, type, checked } = e.target;\n        setProductData({\n            ...productData,\n            [name]: type === 'checkbox' ? checked : value\n        });\n    };\n    \n    const handleImageChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            setImageFile(file);\n            const imageUrl = URL.createObjectURL(file);\n            setProductData({\n                ...productData,\n                image: imageUrl\n            });\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        const formData = new FormData();\n        Object.keys(productData).forEach(key => {\n            formData.append(key, productData[key]);\n        });\n        \n        if (imageFile) {\n            formData.append('image', imageFile);\n        }\n        \n        try {\n            await dispatch(add_product(formData)).unwrap();\n            setProductData({\n                name: \"\",\n                //image: \"\",\n                descriptions: \"\",\n                price: 0,\n                quantity: 0,\n                is_available: true,\n                is_draft: false\n            });\n            setImageFile(null);\n        } catch (error) {\n            console.error(\"Failed to add product:\", error);\n        }\n    };\n\n    useEffect(() => {\n        if (successMessage || errorMessage) {\n            const timer = setTimeout(() => {\n                dispatch(messageClear());\n            }, 3000);\n            return () => clearTimeout(timer);\n        }\n    }, [successMessage, errorMessage, dispatch]);\n\n    return (\n        <div className=\"w-full p-6 bg-white rounded-lg shadow-md\">\n            <h2 className=\"text-3xl font-bold text-gray-800 mb-8\">Add new product</h2>\n            \n            {successMessage && <div className=\"text-green-600 mb-4\">{successMessage}</div>}\n            {errorMessage && <div className=\"text-red-600 mb-4\">{errorMessage}</div>}\n            \n            <form onSubmit={handleSubmit} className=\"space-y-8 w-full\">\n                <div className=\"mb-6 w-full\">\n                    <label htmlFor=\"name\" className=\"block mb-2 text-lg font-medium text-gray-900\">Tên sản phẩm</label>\n                    <input \n                        type=\"text\" \n                        id=\"name\" \n                        name=\"name\"\n                        value={productData.name}\n                        onChange={handleChange}\n                        className=\"bg-gray-50 border border-gray-300 text-gray-900 text-md rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-4 h-14\"\n                        placeholder=\"Enter name product\" \n                        required \n                    />\n                </div>\n                \n                <div className=\"mb-6 w-full\">\n                    <label htmlFor=\"image\" className=\"block mb-2 text-lg font-medium text-gray-900\">Hình ảnh sản phẩm</label>\n                    <input \n                        type=\"file\" \n                        id=\"image\" \n                        name=\"image\"\n                        onChange={handleImageChange}\n                        className=\"bg-gray-50 border border-gray-300 text-gray-900 text-md rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-4 h-14\"\n                        accept=\"image/*\"\n                        required \n                    />\n                    {productData.image && (\n                        <div className=\"mt-4\">\n                            <img \n                                src={productData.image} \n                                alt=\"Preview\" \n                                className=\"max-h-64 max-w-full h-auto object-contain rounded-lg border\"\n                                onError={(e) => e.target.src = \"https://via.placeholder.com/150?text=Preview\"}\n                            />\n                        </div>\n                    )}\n                </div>\n                \n                <div className=\"mb-6 w-full\">\n                    <label htmlFor=\"descriptions\" className=\"block mb-2 text-lg font-medium text-gray-900\">Mô tả</label>\n                    <textarea \n                        id=\"descriptions\" \n                        name=\"descriptions\"\n                        value={productData.descriptions}\n                        onChange={handleChange}\n                        rows=\"6\" \n                        className=\"bg-gray-50 border border-gray-300 text-gray-900 text-md rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-4\"\n                        placeholder=\"Món cơm đến từ vùng provip.\"\n                    ></textarea>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 w-full\">\n                    <div className=\"mb-6\">\n                        <label htmlFor=\"price\" className=\"block mb-2 text-lg font-medium text-gray-900\">Giá (VNĐ)</label>\n                        <input \n                            type=\"number\" \n                            id=\"price\" \n                            name=\"price\"\n                            value={productData.price}\n                            onChange={handleChange}\n                            className=\"bg-gray-50 border border-gray-300 text-gray-900 text-md rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-4 h-14\"\n                            placeholder=\"40000\" \n                            min=\"0\"\n                            required \n                        />\n                    </div>\n                    \n                    <div className=\"mb-6\">\n                        <label htmlFor=\"quantity\" className=\"block mb-2 text-lg font-medium text-gray-900\">Số lượng</label>\n                        <input \n                            type=\"number\" \n                            id=\"quantity\" \n                            name=\"quantity\"\n                            value={productData.quantity}\n                            onChange={handleChange}\n                            className=\"bg-gray-50 border border-gray-300 text-gray-900 text-md rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-4 h-14\"\n                            placeholder=\"10\" \n                            min=\"0\"\n                            required \n                        />\n                    </div>\n                </div>\n                \n                <div className=\"flex justify-start mb-6 w-full\">\n                    <div className=\"flex items-center mr-8\">\n                        <input \n                            id=\"is_available\" \n                            type=\"checkbox\" \n                            name=\"is_available\"\n                            checked={productData.is_available}\n                            onChange={handleChange}\n                            className=\"w-5 h-5 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-blue-300\" \n                        />\n                        <label htmlFor=\"is_available\" className=\"ms-3 text-lg font-medium text-gray-900\">Có sẵn</label>\n                    </div>\n                    \n                </div>\n                \n                <div className=\"flex justify-between w-full\">\n                    <button \n                        type=\"submit\" \n                        className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-lg w-full sm:w-auto px-8 py-4 text-center\"\n                        disabled={loader}\n                    >\n                        {loader ? 'Adding...' : 'Thêm sản phẩm'}\n                    </button>\n                    \n                    <button \n                        type=\"button\" \n                        className=\"text-gray-700 bg-gray-200 hover:bg-gray-300 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-lg w-full sm:w-auto px-8 py-4 text-center\"\n                        onClick={() => {\n                            setProductData({\n                                name: \"\",\n                                image: \"\",\n                                descriptions: \"\",\n                                price: 0,\n                                quantity: 0,\n                                is_available: true,\n                                is_draft: false\n                            });\n                            setImageFile(null);\n                        }}\n                    >\n                        Hủy\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Product;\n"],"names":["Product","dispatch","useDispatch","productState","useSelector","state","product","loader","successMessage","errorMessage","productData","setProductData","useState","name","descriptions","price","quantity","is_available","is_draft","imageFile","setImageFile","handleChange","e","value","type","checked","target","useEffect","timer","setTimeout","messageClear","clearTimeout","_jsxs","className","children","_jsx","onSubmit","async","preventDefault","formData","FormData","Object","keys","forEach","key","append","add_product","unwrap","error","console","htmlFor","id","onChange","placeholder","required","file","files","imageUrl","URL","createObjectURL","image","accept","src","alt","onError","rows","min","disabled","onClick"],"sourceRoot":""}